
naughty:     file format elf32-i386


Disassembly of section .init:

08048308 <_init>:
 8048308:	53                   	push   ebx
 8048309:	83 ec 08             	sub    esp,0x8
 804830c:	e8 df 00 00 00       	call   80483f0 <__x86.get_pc_thunk.bx>
 8048311:	81 c3 ef 1c 00 00    	add    ebx,0x1cef
 8048317:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 804831d:	85 c0                	test   eax,eax
 804831f:	74 05                	je     8048326 <_init+0x1e>
 8048321:	e8 6a 00 00 00       	call   8048390 <ptrace@plt+0x10>
 8048326:	83 c4 08             	add    esp,0x8
 8048329:	5b                   	pop    ebx
 804832a:	c3                   	ret    

Disassembly of section .plt:

08048330 <read@plt-0x10>:
 8048330:	ff 35 04 a0 04 08    	push   DWORD PTR ds:0x804a004
 8048336:	ff 25 08 a0 04 08    	jmp    DWORD PTR ds:0x804a008
 804833c:	00 00                	add    BYTE PTR [eax],al
	...

08048340 <read@plt>:
 8048340:	ff 25 0c a0 04 08    	jmp    DWORD PTR ds:0x804a00c
 8048346:	68 00 00 00 00       	push   0x0
 804834b:	e9 e0 ff ff ff       	jmp    8048330 <_init+0x28>

08048350 <puts@plt>:
 8048350:	ff 25 10 a0 04 08    	jmp    DWORD PTR ds:0x804a010
 8048356:	68 08 00 00 00       	push   0x8
 804835b:	e9 d0 ff ff ff       	jmp    8048330 <_init+0x28>

08048360 <exit@plt>:
 8048360:	ff 25 14 a0 04 08    	jmp    DWORD PTR ds:0x804a014
 8048366:	68 10 00 00 00       	push   0x10
 804836b:	e9 c0 ff ff ff       	jmp    8048330 <_init+0x28>

08048370 <__libc_start_main@plt>:
 8048370:	ff 25 18 a0 04 08    	jmp    DWORD PTR ds:0x804a018
 8048376:	68 18 00 00 00       	push   0x18
 804837b:	e9 b0 ff ff ff       	jmp    8048330 <_init+0x28>

08048380 <ptrace@plt>:
 8048380:	ff 25 1c a0 04 08    	jmp    DWORD PTR ds:0x804a01c
 8048386:	68 20 00 00 00       	push   0x20
 804838b:	e9 a0 ff ff ff       	jmp    8048330 <_init+0x28>

Disassembly of section .plt.got:

08048390 <.plt.got>:
 8048390:	ff 25 fc 9f 04 08    	jmp    DWORD PTR ds:0x8049ffc
 8048396:	66 90                	xchg   ax,ax

Disassembly of section .text:

080483a0 <_start>:
 80483a0:	31 ed                	xor    ebp,ebp
 80483a2:	5e                   	pop    esi
 80483a3:	89 e1                	mov    ecx,esp
 80483a5:	83 e4 f0             	and    esp,0xfffffff0
 80483a8:	50                   	push   eax
 80483a9:	54                   	push   esp
 80483aa:	52                   	push   edx
 80483ab:	e8 23 00 00 00       	call   80483d3 <_start+0x33>
 80483b0:	81 c3 50 1c 00 00    	add    ebx,0x1c50
 80483b6:	8d 83 f0 e8 ff ff    	lea    eax,[ebx-0x1710]
 80483bc:	50                   	push   eax
 80483bd:	8d 83 90 e8 ff ff    	lea    eax,[ebx-0x1770]
 80483c3:	50                   	push   eax
 80483c4:	51                   	push   ecx
 80483c5:	56                   	push   esi
 80483c6:	c7 c0 b4 87 04 08    	mov    eax,0x80487b4
 80483cc:	50                   	push   eax
 80483cd:	e8 9e ff ff ff       	call   8048370 <__libc_start_main@plt>
 80483d2:	f4                   	hlt    
 80483d3:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 80483d6:	c3                   	ret    
 80483d7:	66 90                	xchg   ax,ax
 80483d9:	66 90                	xchg   ax,ax
 80483db:	66 90                	xchg   ax,ax
 80483dd:	66 90                	xchg   ax,ax
 80483df:	90                   	nop

080483e0 <_dl_relocate_static_pie>:
 80483e0:	f3 c3                	repz ret 
 80483e2:	66 90                	xchg   ax,ax
 80483e4:	66 90                	xchg   ax,ax
 80483e6:	66 90                	xchg   ax,ax
 80483e8:	66 90                	xchg   ax,ax
 80483ea:	66 90                	xchg   ax,ax
 80483ec:	66 90                	xchg   ax,ax
 80483ee:	66 90                	xchg   ax,ax

080483f0 <__x86.get_pc_thunk.bx>:
 80483f0:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 80483f3:	c3                   	ret    
 80483f4:	66 90                	xchg   ax,ax
 80483f6:	66 90                	xchg   ax,ax
 80483f8:	66 90                	xchg   ax,ax
 80483fa:	66 90                	xchg   ax,ax
 80483fc:	66 90                	xchg   ax,ax
 80483fe:	66 90                	xchg   ax,ax
 8048400:	b8 70 a0 04 08       	mov    eax,0x804a070
 8048405:	3d 70 a0 04 08       	cmp    eax,0x804a070
 804840a:	74 24                	je     8048430 <__x86.get_pc_thunk.bx+0x40>
 804840c:	b8 00 00 00 00       	mov    eax,0x0
 8048411:	85 c0                	test   eax,eax
 8048413:	74 1b                	je     8048430 <__x86.get_pc_thunk.bx+0x40>
 8048415:	55                   	push   ebp
 8048416:	89 e5                	mov    ebp,esp
 8048418:	83 ec 14             	sub    esp,0x14
 804841b:	68 70 a0 04 08       	push   0x804a070
 8048420:	ff d0                	call   eax
 8048422:	83 c4 10             	add    esp,0x10
 8048425:	c9                   	leave  
 8048426:	c3                   	ret    
 8048427:	89 f6                	mov    esi,esi
 8048429:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
 8048430:	f3 c3                	repz ret 
 8048432:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 8048439:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
 8048440:	b8 70 a0 04 08       	mov    eax,0x804a070
 8048445:	2d 70 a0 04 08       	sub    eax,0x804a070
 804844a:	c1 f8 02             	sar    eax,0x2
 804844d:	89 c2                	mov    edx,eax
 804844f:	c1 ea 1f             	shr    edx,0x1f
 8048452:	01 d0                	add    eax,edx
 8048454:	d1 f8                	sar    eax,1
 8048456:	74 20                	je     8048478 <__x86.get_pc_thunk.bx+0x88>
 8048458:	ba 00 00 00 00       	mov    edx,0x0
 804845d:	85 d2                	test   edx,edx
 804845f:	74 17                	je     8048478 <__x86.get_pc_thunk.bx+0x88>
 8048461:	55                   	push   ebp
 8048462:	89 e5                	mov    ebp,esp
 8048464:	83 ec 10             	sub    esp,0x10
 8048467:	50                   	push   eax
 8048468:	68 70 a0 04 08       	push   0x804a070
 804846d:	ff d2                	call   edx
 804846f:	83 c4 10             	add    esp,0x10
 8048472:	c9                   	leave  
 8048473:	c3                   	ret    
 8048474:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 8048478:	f3 c3                	repz ret 
 804847a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 8048480:	80 3d 6e a0 04 08 00 	cmp    BYTE PTR ds:0x804a06e,0x0
 8048487:	75 17                	jne    80484a0 <__x86.get_pc_thunk.bx+0xb0>
 8048489:	55                   	push   ebp
 804848a:	89 e5                	mov    ebp,esp
 804848c:	83 ec 08             	sub    esp,0x8
 804848f:	e8 6c ff ff ff       	call   8048400 <__x86.get_pc_thunk.bx+0x10>
 8048494:	c6 05 6e a0 04 08 01 	mov    BYTE PTR ds:0x804a06e,0x1
 804849b:	c9                   	leave  
 804849c:	c3                   	ret    
 804849d:	8d 76 00             	lea    esi,[esi+0x0]
 80484a0:	f3 c3                	repz ret 
 80484a2:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 80484a9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]
 80484b0:	55                   	push   ebp
 80484b1:	89 e5                	mov    ebp,esp
 80484b3:	5d                   	pop    ebp
 80484b4:	eb 8a                	jmp    8048440 <__x86.get_pc_thunk.bx+0x50>
 80484b6:	66 90                	xchg   ax,ax
 80484b8:	66 90                	xchg   ax,ax
 80484ba:	66 90                	xchg   ax,ax
 80484bc:	66 90                	xchg   ax,ax
 80484be:	66 90                	xchg   ax,ax
 80484c0:	53                   	push   ebx
 80484c1:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
 80484c5:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
 80484c9:	0f b6 0a             	movzx  ecx,BYTE PTR [edx]
 80484cc:	0f b6 18             	movzx  ebx,BYTE PTR [eax]
 80484cf:	88 1a                	mov    BYTE PTR [edx],bl
 80484d1:	88 08                	mov    BYTE PTR [eax],cl
 80484d3:	5b                   	pop    ebx
 80484d4:	c3                   	ret    
 80484d5:	55                   	push   ebp
 80484d6:	31 c0                	xor    eax,eax
 80484d8:	57                   	push   edi
 80484d9:	56                   	push   esi
 80484da:	53                   	push   ebx
 80484db:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
 80484df:	8b 6c 24 18          	mov    ebp,DWORD PTR [esp+0x18]
 80484e3:	66 90                	xchg   ax,ax
 80484e5:	88 04 06             	mov    BYTE PTR [esi+eax*1],al
 80484e8:	83 c0 01             	add    eax,0x1
 80484eb:	3d 00 01 00 00       	cmp    eax,0x100
 80484f0:	75 f3                	jne    80484e5 <__x86.get_pc_thunk.bx+0xf5>
 80484f2:	31 c9                	xor    ecx,ecx
 80484f4:	31 db                	xor    ebx,ebx
 80484f6:	89 d8                	mov    eax,ebx
 80484f8:	0f b6 3c 1e          	movzx  edi,BYTE PTR [esi+ebx*1]
 80484fc:	99                   	cdq    
 80484fd:	f7 7c 24 1c          	idiv   DWORD PTR [esp+0x1c]
 8048501:	89 f8                	mov    eax,edi
 8048503:	02 44 15 00          	add    al,BYTE PTR [ebp+edx*1+0x0]
 8048507:	01 c1                	add    ecx,eax
 8048509:	0f b6 c9             	movzx  ecx,cl
 804850c:	0f b6 04 0e          	movzx  eax,BYTE PTR [esi+ecx*1]
 8048510:	88 04 1e             	mov    BYTE PTR [esi+ebx*1],al
 8048513:	89 f8                	mov    eax,edi
 8048515:	83 c3 01             	add    ebx,0x1
 8048518:	88 04 0e             	mov    BYTE PTR [esi+ecx*1],al
 804851b:	81 fb 00 01 00 00    	cmp    ebx,0x100
 8048521:	75 d3                	jne    80484f6 <__x86.get_pc_thunk.bx+0x106>
 8048523:	5b                   	pop    ebx
 8048524:	5e                   	pop    esi
 8048525:	5f                   	pop    edi
 8048526:	5d                   	pop    ebp
 8048527:	c3                   	ret    
 8048528:	55                   	push   ebp
 8048529:	57                   	push   edi
 804852a:	56                   	push   esi
 804852b:	53                   	push   ebx
 804852c:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
 8048530:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
 8048534:	85 ff                	test   edi,edi
 8048536:	7e 38                	jle    8048570 <__x86.get_pc_thunk.bx+0x180>
 8048538:	8b 74 24 18          	mov    esi,DWORD PTR [esp+0x18]
 804853c:	31 db                	xor    ebx,ebx
 804853e:	31 d2                	xor    edx,edx
 8048540:	01 f7                	add    edi,esi
 8048542:	83 c2 01             	add    edx,0x1
 8048545:	0f b6 d2             	movzx  edx,dl
 8048548:	0f b6 2c 11          	movzx  ebp,BYTE PTR [ecx+edx*1]
 804854c:	01 eb                	add    ebx,ebp
 804854e:	0f b6 db             	movzx  ebx,bl
 8048551:	0f b6 04 19          	movzx  eax,BYTE PTR [ecx+ebx*1]
 8048555:	88 04 11             	mov    BYTE PTR [ecx+edx*1],al
 8048558:	89 e8                	mov    eax,ebp
 804855a:	88 04 19             	mov    BYTE PTR [ecx+ebx*1],al
 804855d:	02 04 11             	add    al,BYTE PTR [ecx+edx*1]
 8048560:	0f b6 c0             	movzx  eax,al
 8048563:	0f b6 04 01          	movzx  eax,BYTE PTR [ecx+eax*1]
 8048567:	30 06                	xor    BYTE PTR [esi],al
 8048569:	83 c6 01             	add    esi,0x1
 804856c:	39 f7                	cmp    edi,esi
 804856e:	75 d2                	jne    8048542 <__x86.get_pc_thunk.bx+0x152>
 8048570:	5b                   	pop    ebx
 8048571:	5e                   	pop    esi
 8048572:	5f                   	pop    edi
 8048573:	5d                   	pop    ebp
 8048574:	c3                   	ret    
 
 8048575:	55                   	push   ebp
 8048576:	89 e5                	mov    ebp,esp
 8048578:	81 ec 08 01 00 00    	sub    esp,0x108
 804857e:	83 ec 04             	sub    esp,0x4
 8048581:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
 8048584:	ff 75 08             	push   DWORD PTR [ebp+0x8]
 8048587:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
 804858d:	50                   	push   eax
 804858e:	e8 42 ff ff ff       	call   80484d5 <__x86.get_pc_thunk.bx+0xe5>
 8048593:	83 c4 10             	add    esp,0x10
 8048596:	83 ec 04             	sub    esp,0x4
 8048599:	6a 2e                	push   0x2e
 804859b:	68 28 a0 04 08       	push   0x804a028
 80485a0:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
 80485a6:	50                   	push   eax
 80485a7:	e8 7c ff ff ff       	call   8048528 <__x86.get_pc_thunk.bx+0x138>
 80485ac:	83 c4 10             	add    esp,0x10
 80485af:	c9                   	leave  
 80485b0:	c3                   	ret    

080485b1 <print_flag>:
 80485b1:	55                   	push   ebp
 80485b2:	89 e5                	mov    ebp,esp
 80485b4:	6a 04                	push   0x4
 80485b6:	68 69 a0 04 08       	push   0x804a069
 80485bb:	6a 00                	push   0x0
 80485bd:	6a 00                	push   0x0
 80485bf:	6a 00                	push   0x0
 80485c1:	6a 00                	push   0x0
 80485c3:	e8 b8 fd ff ff       	call   8048380 <ptrace@plt>
 80485c8:	83 c4 10             	add    esp,0x10
 80485cb:	83 f8 ff             	cmp    eax,0xffffffff
 80485ce:	75 07                	jne    80485d7 <print_flag+0x26>
 80485d0:	6a 01                	push   0x1
 80485d2:	e8 89 fd ff ff       	call   8048360 <exit@plt>
 80485d7:	e8 99 ff ff ff       	call   8048575 <__x86.get_pc_thunk.bx+0x185>
 80485dc:	68 28 a0 04 08       	push   0x804a028
 80485e1:	e8 6a fd ff ff       	call   8048350 <puts@plt>
 80485e6:	c9                   	leave  
 80485e7:	c3                   	ret    
 
 
 80485e8:	55                   	push   ebp
 80485e9:	89 e5                	mov    ebp,esp
 80485eb:	68 57 a0 04 08       	push   0x804a057
 80485f0:	e8 5b fd ff ff       	call   8048350 <puts@plt>
 80485f5:	6a 00                	push   0x0
 80485f7:	e8 64 fd ff ff       	call   8048360 <exit@plt>
 80485fc:	c9                   	leave  
 80485fd:	c3                   	ret    
 
 
 80485fe:	55                   	push   ebp
 80485ff:	89 e5                	mov    ebp,esp
 8048601:	81 ec 26 01 00 00    	sub    esp,0x126	; BUF SIZE 0x126 = 294
 8048607:	89 e2                	mov    edx,esp
 8048609:	6a 70                	push   0x70			; max 0x70 = 112
 804860b:	52                   	push   edx			; addr buffer
 804860c:	6a 00                	push   0x0			; STDIN
 804860e:	e8 2d fd ff ff       	call   8048340 <read@plt>
										 ; 294 - 264 = 30
										 ; [ebp-0x108] = [ebp - 264] = [esp + 30]
 8048613:	81 bd f8 fe ff ff 30 	cmp    DWORD PTR [ebp-0x108],0x1d580630
 804861a:	06 58 1d 
 804861d:	74 07                	je     8048626 <print_flag+0x75>
 804861f:	6a 01                	push   0x1
 8048621:	e8 3a fd ff ff       	call   8048360 <exit@plt>
 8048626:	c9                   	leave  
 8048627:	c3                   	ret    
 
 
 8048628:	55                   	push   ebp
 8048629:	89 e5                	mov    ebp,esp
 804862b:	81 ec bb 00 00 00    	sub    esp,0xbb		; BUF SIZE 0xbb = 187
 8048631:	89 e2                	mov    edx,esp
 8048633:	68 b0 00 00 00       	push   0xb0			; max 0xb0 = 176
 8048638:	52                   	push   edx			; addr buffer
 8048639:	6a 00                	push   0x0			; STDIN
 804863b:	e8 00 fd ff ff       	call   8048340 <read@plt>
										 ; 187 - 124 = 63
										 ; [ebp-0x7c] = [ebp-124] = [esp + 63]
 8048640:	81 7d 84 5b 63 ed 81 	cmp    DWORD PTR [ebp-0x7c],0x81ed635b
 8048647:	74 07                	je     8048650 <print_flag+0x9f>
 8048649:	6a 01                	push   0x1
 804864b:	e8 10 fd ff ff       	call   8048360 <exit@plt>
 8048650:	c9                   	leave  
 8048651:	c3                   	ret    
 
 
 8048652:	55                   	push   ebp
 8048653:	89 e5                	mov    ebp,esp
 8048655:	81 ec cb 00 00 00    	sub    esp,0xcb		; BUF SIZE 0xcb
 804865b:	89 e2                	mov    edx,esp
 804865d:	68 a5 00 00 00       	push   0xa5			; max 0xa5
 8048662:	52                   	push   edx
 8048663:	6a 00                	push   0x0
 8048665:	e8 d6 fc ff ff       	call   8048340 <read@plt>
 804866a:	81 7d 95 b3 58 68 2a 	cmp    DWORD PTR [ebp-0x6b],0x2a6858b3  ; offset 0xcb - 0x6b
 8048671:	74 07                	je     804867a <print_flag+0xc9>
 8048673:	6a 01                	push   0x1
 8048675:	e8 e6 fc ff ff       	call   8048360 <exit@plt>
 804867a:	c9                   	leave  
 804867b:	c3                   	ret    
 
 
 804867c:	55                   	push   ebp
 804867d:	89 e5                	mov    ebp,esp
 804867f:	81 ec 47 01 00 00    	sub    esp,0x147	; BUF SIZE 0x147
 8048685:	89 e2                	mov    edx,esp
 8048687:	68 d6 00 00 00       	push   0xd6			; max 0xd6
 804868c:	52                   	push   edx
 804868d:	6a 00                	push   0x0
 804868f:	e8 ac fc ff ff       	call   8048340 <read@plt>
 8048694:	81 bd e9 fe ff ff ac 	cmp    DWORD PTR [ebp-0x117],0x4575b4ac  ; offset 0x147 - 0x117
 804869b:	b4 75 45 
 804869e:	74 07                	je     80486a7 <print_flag+0xf6>
 80486a0:	6a 01                	push   0x1
 80486a2:	e8 b9 fc ff ff       	call   8048360 <exit@plt>
 80486a7:	c9                   	leave  
 80486a8:	c3                   	ret    
 
 
 80486a9:	55                   	push   ebp
 80486aa:	89 e5                	mov    ebp,esp
 80486ac:	81 ec 97 00 00 00    	sub    esp,0x97		; BUF SIZE 0x97
 80486b2:	89 e2                	mov    edx,esp
 80486b4:	6a 76                	push   0x76			; max 0x76
 80486b6:	52                   	push   edx
 80486b7:	6a 00                	push   0x0
 80486b9:	e8 82 fc ff ff       	call   8048340 <read@plt>
 80486be:	81 7d 92 88 64 63 6f 	cmp    DWORD PTR [ebp-0x6e],0x6f636488 ; offset 0x97 - 0x6e
 80486c5:	74 07                	je     80486ce <print_flag+0x11d>
 80486c7:	6a 01                	push   0x1
 80486c9:	e8 92 fc ff ff       	call   8048360 <exit@plt>
 80486ce:	c9                   	leave  
 80486cf:	c3                   	ret    
 
				;; VULNERABILITATE AICI
 80486d0:	55                   	push   ebp
 80486d1:	89 e5                	mov    ebp,esp
 80486d3:	81 ec 7c 01 00 00    	sub    esp,0x17c	; BUF SIZE 0x17c
 80486d9:	89 e2                	mov    edx,esp
 80486db:	68 bb 02 00 00       	push   0x2bb		; max 0x2bb
 80486e0:	52                   	push   edx
 80486e1:	6a 00                	push   0x0
 80486e3:	e8 58 fc ff ff       	call   8048340 <read@plt>
 80486e8:	81 bd c6 fe ff ff d3 	cmp    DWORD PTR [ebp-0x13a],0xbea815d3	; offset 0x17c - 0x13a
 80486ef:	15 a8 be 
 80486f2:	74 07                	je     80486fb <print_flag+0x14a>
 80486f4:	6a 01                	push   0x1
 80486f6:	e8 65 fc ff ff       	call   8048360 <exit@plt>
 80486fb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 80486fe:	ff d0                	call   eax
 8048700:	6a 00                	push   0x0
 8048702:	e8 59 fc ff ff       	call   8048360 <exit@plt>
 8048707:	c9                   	leave  
 8048708:	c3                   	ret    
 
 
 8048709:	55                   	push   ebp
 804870a:	89 e5                	mov    ebp,esp
 804870c:	81 ec 9d 01 00 00    	sub    esp,0x19d
 8048712:	89 e2                	mov    edx,esp
 8048714:	68 24 01 00 00       	push   0x124
 8048719:	52                   	push   edx
 804871a:	6a 00                	push   0x0
 804871c:	e8 1f fc ff ff       	call   8048340 <read@plt>
 8048721:	81 bd 0b ff ff ff d9 	cmp    DWORD PTR [ebp-0xf5],0xc6e534d9
 8048728:	34 e5 c6 
 804872b:	74 07                	je     8048734 <print_flag+0x183>
 804872d:	6a 01                	push   0x1
 804872f:	e8 2c fc ff ff       	call   8048360 <exit@plt>
 8048734:	c9                   	leave  
 8048735:	c3                   	ret    
 
 
 8048736:	55                   	push   ebp
 8048737:	89 e5                	mov    ebp,esp
 8048739:	81 ec b0 00 00 00    	sub    esp,0xb0
 804873f:	89 e2                	mov    edx,esp
 8048741:	6a 66                	push   0x66
 8048743:	52                   	push   edx
 8048744:	6a 00                	push   0x0
 8048746:	e8 f5 fb ff ff       	call   8048340 <read@plt>
 804874b:	81 bd 78 ff ff ff a4 	cmp    DWORD PTR [ebp-0x88],0x384a03a4
 8048752:	03 4a 38 
 8048755:	74 07                	je     804875e <print_flag+0x1ad>
 8048757:	6a 01                	push   0x1
 8048759:	e8 02 fc ff ff       	call   8048360 <exit@plt>
 804875e:	c9                   	leave  
 804875f:	c3                   	ret    
 
 
 8048760:	55                   	push   ebp
 8048761:	89 e5                	mov    ebp,esp
 8048763:	81 ec 35 01 00 00    	sub    esp,0x135
 8048769:	89 e2                	mov    edx,esp
 804876b:	68 e9 00 00 00       	push   0xe9
 8048770:	52                   	push   edx
 8048771:	6a 00                	push   0x0
 8048773:	e8 c8 fb ff ff       	call   8048340 <read@plt>
 8048778:	81 7d 93 a8 58 88 89 	cmp    DWORD PTR [ebp-0x6d],0x898858a8
 804877f:	74 07                	je     8048788 <print_flag+0x1d7>
 8048781:	6a 01                	push   0x1
 8048783:	e8 d8 fb ff ff       	call   8048360 <exit@plt>
 8048788:	c9                   	leave  
 8048789:	c3                   	ret    
 
 
 804878a:	55                   	push   ebp
 804878b:	89 e5                	mov    ebp,esp
 804878d:	81 ec c4 00 00 00    	sub    esp,0xc4
 8048793:	89 e2                	mov    edx,esp
 8048795:	68 96 00 00 00       	push   0x96
 804879a:	52                   	push   edx
 804879b:	6a 00                	push   0x0
 804879d:	e8 9e fb ff ff       	call   8048340 <read@plt>
 80487a2:	81 7d aa a9 8d e7 8b 	cmp    DWORD PTR [ebp-0x56],0x8be78da9
 80487a9:	74 07                	je     80487b2 <print_flag+0x201>
 80487ab:	6a 01                	push   0x1
 80487ad:	e8 ae fb ff ff       	call   8048360 <exit@plt>
 80487b2:	c9                   	leave  
 80487b3:	c3                   	ret    

080487b4 <main>:
 80487b4:	55                   	push   ebp
 80487b5:	89 e5                	mov    ebp,esp
 80487b7:	68 97 29 04 08       	push   0x8042997
 80487bc:	68 77 c7 04 08       	push   0x804c777
 80487c1:	68 c2 b5 04 08       	push   0x804b5c2
 80487c6:	68 76 62 04 08       	push   0x8046276
 80487cb:	68 29 46 04 08       	push   0x8044629
 80487d0:	e8 29 fe ff ff       	call   80485fe <print_flag+0x4d>
 80487d5:	68 4b 11 04 08       	push   0x804114b
 80487da:	e8 49 fe ff ff       	call   8048628 <print_flag+0x77>
 80487df:	68 fa 88 04 08       	push   0x80488fa
 80487e4:	68 ff 2d 04 08       	push   0x8042dff
 80487e9:	68 35 ea 04 08       	push   0x804ea35
 80487ee:	68 bc d6 04 08       	push   0x804d6bc
 80487f3:	68 76 3a 04 08       	push   0x8043a76
 80487f8:	68 af 2a 04 08       	push   0x8042aaf
 80487fd:	e8 50 fe ff ff       	call   8048652 <print_flag+0xa1>
 8048802:	68 60 62 04 08       	push   0x8046260
 8048807:	68 76 72 04 08       	push   0x8047276
 804880c:	68 f2 89 04 08       	push   0x80489f2
 8048811:	e8 66 fe ff ff       	call   804867c <print_flag+0xcb>
 8048816:	68 05 f0 04 08       	push   0x804f005
 804881b:	68 78 c9 04 08       	push   0x804c978
 8048820:	68 f6 3b 04 08       	push   0x8043bf6
 8048825:	68 27 e8 04 08       	push   0x804e827
 804882a:	68 50 a9 04 08       	push   0x804a950
 804882f:	e8 75 fe ff ff       	call   80486a9 <print_flag+0xf8>
 8048834:	68 e8 85 04 08       	push   0x80485e8
 8048839:	e8 92 fe ff ff       	call   80486d0 <print_flag+0x11f>
 804883e:	68 75 ca 04 08       	push   0x804ca75
 8048843:	e8 c1 fe ff ff       	call   8048709 <print_flag+0x158>
 8048848:	68 86 d7 04 08       	push   0x804d786
 804884d:	68 fb f1 04 08       	push   0x804f1fb
 8048852:	68 80 54 04 08       	push   0x8045480
 8048857:	68 f9 bd 04 08       	push   0x804bdf9
 804885c:	e8 d5 fe ff ff       	call   8048736 <print_flag+0x185>
 8048861:	68 44 61 04 08       	push   0x8046144
 8048866:	68 21 ce 04 08       	push   0x804ce21
 804886b:	68 fe 03 04 08       	push   0x80403fe
 8048870:	68 89 34 04 08       	push   0x8043489
 8048875:	e8 e6 fe ff ff       	call   8048760 <print_flag+0x1af>
 804887a:	68 77 a1 04 08       	push   0x804a177
 804887f:	68 2b 84 04 08       	push   0x804842b
 8048884:	e8 01 ff ff ff       	call   804878a <print_flag+0x1d9>
 8048889:	c9                   	leave  
 804888a:	c3                   	ret    
 804888b:	66 90                	xchg   ax,ax
 804888d:	66 90                	xchg   ax,ax
 804888f:	90                   	nop

08048890 <__libc_csu_init>:
 8048890:	55                   	push   ebp
 8048891:	57                   	push   edi
 8048892:	56                   	push   esi
 8048893:	53                   	push   ebx
 8048894:	e8 57 fb ff ff       	call   80483f0 <__x86.get_pc_thunk.bx>
 8048899:	81 c3 67 17 00 00    	add    ebx,0x1767
 804889f:	83 ec 0c             	sub    esp,0xc
 80488a2:	8b 6c 24 28          	mov    ebp,DWORD PTR [esp+0x28]
 80488a6:	8d b3 10 ff ff ff    	lea    esi,[ebx-0xf0]
 80488ac:	e8 57 fa ff ff       	call   8048308 <_init>
 80488b1:	8d 83 0c ff ff ff    	lea    eax,[ebx-0xf4]
 80488b7:	29 c6                	sub    esi,eax
 80488b9:	c1 fe 02             	sar    esi,0x2
 80488bc:	85 f6                	test   esi,esi
 80488be:	74 25                	je     80488e5 <__libc_csu_init+0x55>
 80488c0:	31 ff                	xor    edi,edi
 80488c2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 80488c8:	83 ec 04             	sub    esp,0x4
 80488cb:	55                   	push   ebp
 80488cc:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 80488d0:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 80488d4:	ff 94 bb 0c ff ff ff 	call   DWORD PTR [ebx+edi*4-0xf4]
 80488db:	83 c7 01             	add    edi,0x1
 80488de:	83 c4 10             	add    esp,0x10
 80488e1:	39 fe                	cmp    esi,edi
 80488e3:	75 e3                	jne    80488c8 <__libc_csu_init+0x38>
 80488e5:	83 c4 0c             	add    esp,0xc
 80488e8:	5b                   	pop    ebx
 80488e9:	5e                   	pop    esi
 80488ea:	5f                   	pop    edi
 80488eb:	5d                   	pop    ebp
 80488ec:	c3                   	ret    
 80488ed:	8d 76 00             	lea    esi,[esi+0x0]

080488f0 <__libc_csu_fini>:
 80488f0:	f3 c3                	repz ret 

Disassembly of section .fini:

080488f4 <_fini>:
 80488f4:	53                   	push   ebx
 80488f5:	83 ec 08             	sub    esp,0x8
 80488f8:	e8 f3 fa ff ff       	call   80483f0 <__x86.get_pc_thunk.bx>
 80488fd:	81 c3 03 17 00 00    	add    ebx,0x1703
 8048903:	83 c4 08             	add    esp,0x8
 8048906:	5b                   	pop    ebx
 8048907:	c3                   	ret    
